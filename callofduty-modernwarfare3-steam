#!/bin/bash
# Date : (2012-02-18 12-48)
# Last revision : (2012-02-18 12:57)
# Wine version used : 1.3.28
# Distribution used to test : Debiann unstable amd64
# Author : Pierre Etchemaite
#    based on script by GNU_Raziel
# Licence : Retail

[ "$PLAYONLINUX" = "" ] && exit 0
source "$PLAYONLINUX/lib/sources"

TITLE="Call of Duty: Modern Warfare 3"
PREFIX="CallOfDutyMW3"
WORKING_WINE_VERSION="1.3.28"
GAME_VMS="256"
VID="42690"

# if [ "$POL_LANG" == "fr" ]; then
# VID="243"
# elif [ "$POL_LANG" == "it" ]; then
# VID="244"
# elif [ "$POL_LANG" == "de" ]; then
# VID="245"
# elif [ "$POL_LANG" == "es" ]; then
# VID="246"
# elif [ "$POL_LANG" == "ko" ]; then
# VID="249"
# elif [ "$POL_LANG" == "ja" ]; then
# VID="251"
# elif [ "$POL_LANG" == "ru" ]; then
# VID="252"
# elif [ "$POL_LANG" == "th" ]; then
# VID="253"
# fi

# Starting the script
rm "$POL_USER_ROOT/tmp/*.jpg"
# POL_GetSetupImages "http://files.playonlinux.com/resources/setups/css/top.jpg" "http://files.playonlinux.com/resources/setups/css/left.jpg" "$TITLE"
POL_SetupWindow_Init

# Starting debugging API
POL_Debug_Init

POL_SetupWindow_presentation "$TITLE" "Activision" "http://www.callofduty.com/mw3" "Pierre Etchemaite" "$PREFIX"

POL_SetupWindow_checkexist()
{	
	if [ -e "$POL_USER_ROOT/wineprefix/$1" ]; then
		STEAM=`find $WINEPREFIX -name "Steam.exe"`
		if [ "$STEAM" != "" ]; then
			POL_SetupWindow_menu "$(eval_gettext 'Steam installation has been detected\nwould you like to install this game in the same virtual drive?')" "$TITLE" "$(eval_gettext 'Yes')~$(eval_gettext 'No')" "~"
			STEAM_USE=$APP_ANSWER
			if [ "$STEAM_USE" == "$(eval_gettext 'Yes')" ]; then
				STEAM_USE="1"
				PREFIX="steam"
			else
				STEAM_USE="0"
			fi
		fi
	else
		STEAM_USE="0"
	fi
}

POL_SetupWindow_checkexist "steam"

# Setting prefix path
POL_Wine_SelectPrefix "$PREFIX"

if [ "$STEAM_USE" == "0" ]; then
	# Downloading wine if necessary and creating prefix
	POL_System_SetArch "x86"
	POL_Wine_PrefixCreate "$WORKING_WINE_VERSION"
fi

# Choose between Steam and Digital Download version
# POL_SetupWindow_InstallMethod "DVD,STEAM"
INSTALL_METHOD=STEAM

# Installing mandatory dependencies
if [ "$STEAM_USE" == "0" ]; then
	POL_Call POL_Install_steam
fi

# Mandatory pre-install fix for steam
POL_Call POL_Install_steam_flags "$VID"

if [ "$INSTALL_METHOD" == "DVD" ]; then
	# Asking for CDROM and checking if it's correct one
	POL_SetupWindow_message "$(eval_gettext 'Please insert game media into your disk drive\nif not already done.')"
	POL_SetupWindow_cdrom
	POL_SetupWindow_check_cdrom "Setup.exe"
	POL_Wine start /unix "$CDROM/Setup.exe"
	POL_Wine_WaitExit "$TITLE"
else
	cd "$WINEPREFIX/drive_c/$PROGRAMFILES/Steam"

        # FIXME avoid redownloads during tests
        tar xzvf ~/dvdrip-data/SteamApps_COD:MW3.tgz
        # /FIXME
        POL_SetupWindow_message "$(eval gettext 'You will have to close the Steam interface when the download is completed, so that the installation script can continue.')" "$TITLE"
	POL_Wine "steam.exe" steam://install/$VID
	POL_Wine_WaitExit "$TITLE"
fi

# Asking about memory size of graphic card
POL_SetupWindow_VMS $GAME_VMS

## Fix for this game
# Sound problem fix - pulseaudio related
[ "$POL_OS" = "Linux" ] && Set_SoundDriver "alsa"
[ "$POL_OS" = "Linux" ] && Set_SoundEmulDriver "Y"
## End Fix

# Cleaning temp
if [ -e "$WINEPREFIX/drive_c/windows/temp/" ]; then
	rm -rf "$WINEPREFIX/drive_c/windows/temp/*"
	chmod -R 777 "$POL_USER_ROOT/tmp/"
	rm -rf "$POL_USER_ROOT/tmp/*"
fi

# Making shortcut
POL_Shortcut "Steam.exe" "$TITLE" "$TITLE.png" "steam://rungameid/$VID"

POL_SetupWindow_Close
exit 0
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)

iEYEABECAAYFAk5eZO0ACgkQ5TH6yaoTykfi+QCghxrd5ttqx2sBJFU7/QWvvHoD
sZAAnR1YycNl+9HmqUfy8El4i0z00MbE
=dj8G
-----END PGP SIGNATURE-----
